# Docker Compose Configuration
COMPOSE_PROJECT_NAME=rag-system

# Common Configuration
APP_ENV=development
LOG_LEVEL=debug

# Backend Configuration
BACKEND_PORT=8080
DATABASE_URL=postgresql://postgres:postgres@db:5432/rag
DATABASE_USER=postgres
DATABASE_PASSWORD=postgres
DATABASE_NAME=rag
DATABASE_HOST=db
DATABASE_PORT=5432
PROJECT_NAME=RAG API

# Vector Database Config
VECTOR_DB_PATH=./backend/chroma_db
CHROMA_HOST=chromadb
CHROMA_PORT=8000
PERSIST_DIRECTORY=./backend/chroma_db

# MinIO Object Storage
MINIO_ACCESS_KEY=minioadmin
MINIO_SECRET_KEY=minioadmin
MINIO_SECURE=False
MINIO_URL=minio:9000
MINIO_DATA_DIR=./storage/minio  # Local directory for MinIO data


# Choose LLM provider
LLM_PROVIDER=openai  # or azure
# OpenAI API Config
OPENAI_API_KEY=OpenAI-API-Key
OPENAI_MODEL=gpt-4o
# Azure OpenAI settings (when using Azure)
AZURE_OPENAI_API_KEY=your-azure-api-key
AZURE_OPENAI_ENDPOINT=https://your-resource-name.openai.azure.com
AZURE_OPENAI_DEPLOYMENT=your-deployment-name
AZURE_OPENAI_API_VERSION=2023-05-15

# Choose embedding provider
EMBEDDING_PROVIDER=openai  # or azure
# Embedding Settings
EMBEDDING_MODEL=text-embedding-3-large
EMBEDDING_MODEL_DIMENSIONS=3072
# Azure embedding settings
AZURE_EMBEDDING_DEPLOYMENT=your-embedding-deployment-name

# Document Processing
CHUNK_SIZE=1000
CHUNK_OVERLAP=200

# Retrieval Settings
MAX_RETRIEVED_DOCUMENTS=5

# File Upload Settings
UPLOAD_DIR=./data/uploads
MAX_UPLOAD_SIZE=10485760

# Frontend Configuration
FRONTEND_PORT=3000
NEXT_PUBLIC_API_URL=http://localhost:8080
