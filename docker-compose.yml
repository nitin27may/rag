version: '3.8'

services:
  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   ports:
  #     - "${FRONTEND_PORT}:3000"
  #   environment:
  #     - NODE_ENV=${APP_ENV}
  #     - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
  #   volumes:
  #     - ./frontend:/app
  #     - /app/node_modules
  #     - /app/.next
  #   depends_on:
  #     - backend
  #   restart: unless-stopped

  # backend:
  #   build:
  #     context: ./backend
  #     dockerfile: Dockerfile
  #   ports:
  #     - "${BACKEND_PORT}:8080"
  #   environment:
  #     - PYTHONPATH=/app
  #     - DATABASE_URL=${DATABASE_URL}
  #     - OPENAI_API_KEY=${OPENAI_API_KEY}
  #     - OPENAI_MODEL=${OPENAI_MODEL}
  #     - LOG_LEVEL=${LOG_LEVEL}
  #     - CHROMA_HOST=chromadb
  #     - CHROMA_PORT=8000
  #     - VECTOR_DB_PATH=/app/chroma_db
  #     - MINIO_URL=minio:9000
  #     - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
  #     - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
  #     - MINIO_SECURE=False
  #   volumes:
  #     - ./backend:/app
  #     - ./backend/data:/app/data
  #   depends_on:
  #     - db
  #     - chromadb
  #     - minio
  #   restart: unless-stopped

  db:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  chromadb:
    image: ghcr.io/chroma-core/chroma:latest
    volumes:
      - chroma_data:/chroma/chroma
    ports:
      - "8000:8000"
    environment:
      - ALLOW_RESET=true
      - ANONYMIZED_TELEMETRY=false
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
    restart: unless-stopped

  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"  # API port
      - "9001:9001"  # Console port
    environment:
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_KEY}
    volumes:
      - ./storage/minio:/data  # Map local folder to MinIO data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    restart: unless-stopped

volumes:
  postgres_data:
  chroma_data:
